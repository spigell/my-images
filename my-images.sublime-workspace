{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Mi",
				"Millisecond"
			],
			[
				"deck",
				"deckFiles"
			],
			[
				"Sprin",
				"Sprintf"
			],
			[
				"New",
				"NewVersionCmd"
			],
			[
				"Error",
				"ConfigFileNotFoundError"
			],
			[
				"mo",
				"modelName"
			],
			[
				"con",
				"container_name"
			],
			[
				"NewAto",
				"NewAtomicLevelAt"
			],
			[
				"Leve",
				"InfoLevel"
			],
			[
				"Ne",
				"NewAtomicLevel"
			],
			[
				"Log",
				"logLevel"
			],
			[
				"Debu",
				"DebugLevel.String"
			],
			[
				"Debug",
				"DebugLevel.String"
			],
			[
				"tunn",
				"tunnelSecret"
			],
			[
				"clou",
				"cloudflaredConfig"
			],
			[
				"getSe",
				"getSecretObject"
			],
			[
				"v",
				"values?"
			],
			[
				"tmp",
				"tmpFilePath"
			],
			[
				"m",
				"clusterName"
			],
			[
				"l",
				"length"
			],
			[
				"get",
				"getKubeconfig"
			],
			[
				"purge",
				"purgeCFFiles"
			],
			[
				"Certifia",
				"CertificateMap"
			],
			[
				"certif",
				"certificatemanager"
			],
			[
				"cert",
				"secretmanager"
			],
			[
				"cer",
				"certificatemanager"
			],
			[
				"sub",
				"substring"
			],
			[
				"Endo",
				"NetworkEndpoint"
			],
			[
				"En",
				"NetworkEndpointGroup"
			],
			[
				"work",
				"working-directory"
			],
			[
				"us",
				"us-centra1-docker"
			],
			[
				"inf",
				"infraunlimited_certbot_hcloud_token"
			],
			[
				"infr",
				"infraunlimited"
			],
			[
				"clie",
				"client_cert"
			],
			[
				"etcd",
				"etcdctl"
			],
			[
				"certi",
				"certificate_bundle"
			],
			[
				"infa",
				"infraunlimited_etcd_vault"
			],
			[
				"infra",
				"infraunlimited_etcd_vault"
			],
			[
				"vault_ser",
				"vault_secret_name"
			],
			[
				"cre",
				"creds_file"
			],
			[
				"gitla",
				"gitlab_broken_runners"
			],
			[
				"git",
				"gitlab_broken_runners"
			],
			[
				"vault_se",
				"vault_secret_name"
			],
			[
				"infra_",
				"infra_gitlab_registry_enabled"
			],
			[
				"infra_git",
				"infra_gitlab_nginx_enable"
			],
			[
				"vault_",
				"vault_needed_ca"
			],
			[
				"backe",
				"backends"
			],
			[
				"open",
				"openvpn_instance"
			],
			[
				"op",
				"openvpn_instance"
			],
			[
				"confi",
				"configuration"
			],
			[
				"uplo",
				"uploaded_configs"
			],
			[
				"se",
				"secret_name"
			],
			[
				"comm",
				"common_secrets"
			],
			[
				"ope",
				"openvpn_servers"
			],
			[
				"loo",
				"loop_var"
			],
			[
				"vault",
				"vault_openvpn"
			],
			[
				"allow_",
				"allow_subdomains"
			],
			[
				"h",
				"hashivault_secret_engine"
			],
			[
				"valu",
				"vault_status"
			],
			[
				"in",
				"inventory_path"
			],
			[
				"re",
				"replaced_info"
			],
			[
				"value",
				"value_raw"
			],
			[
				"de",
				"description"
			],
			[
				"ou",
				"output_yaml"
			],
			[
				"u",
				"utf-8"
			],
			[
				"enco",
				"encode"
			],
			[
				"groups",
				"needed_groups"
			],
			[
				"pa",
				"packages_by_environment"
			],
			[
				"pac",
				"packages_by_user"
			],
			[
				"rt-",
				"rt-testing-env"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 396.0,
		"last_filter": "",
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				":",
				":$ - EOF"
			],
			[
				":po",
				"OpenAI: Open in Tab"
			],
			[
				"mak",
				"Markdown Preview: Preview in Browser"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				":q",
				"Set Syntax: SQL"
			],
			[
				"markdo",
				"Markdown Preview: Preview in Browser"
			],
			[
				"copi",
				"Copilot: Get Panel Completions"
			],
			[
				"cop",
				"Copilot: Get Panel Completions"
			],
			[
				":s",
				":w - Save"
			],
			[
				":a",
				"Help: About"
			],
			[
				"package ",
				"Package Control: List Packages"
			],
			[
				"Package",
				"Package Control: Upgrade Package"
			],
			[
				"Package control",
				"Install Package Control"
			],
			[
				"gitlab",
				"Gitlab issue: Open"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"pak",
				"Package Control: Install Package"
			],
			[
				":W",
				":w - Save"
			],
			[
				":yam",
				"Set Syntax: YAML"
			],
			[
				":yaml",
				"Set Syntax: YAML"
			],
			[
				"she",
				"ShellCommand"
			],
			[
				"shell",
				"ShellCommand"
			],
			[
				"Paca",
				"Package Control: Install Package"
			],
			[
				":per",
				"Set Syntax: Perl"
			],
			[
				":bas",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git add all",
				"Git: Add All"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git push",
				"Git: Push"
			],
			[
				"git commit ",
				"Git: Commit"
			],
			[
				"git st",
				"Git: Status"
			],
			[
				"git comm",
				"Git: Commit"
			],
			[
				"Git add all",
				"Git: Add All"
			],
			[
				"set syntax perl",
				"Set Syntax: Perl"
			],
			[
				"git blame",
				"Git: Blame"
			],
			[
				":json",
				"Set Syntax: JSON"
			],
			[
				":jso",
				"Set Syntax: JSON"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"Git comm",
				"Git: Commit"
			],
			[
				"Git com",
				"Git: Commit"
			],
			[
				"Git add",
				"Git: Add All"
			],
			[
				"Git",
				"Git: Status"
			],
			[
				"Git commit ",
				"Git: Commit"
			],
			[
				":ruby",
				"Set Syntax: Ruby"
			],
			[
				":Git ",
				"Set Syntax: Git Commit View"
			],
			[
				":pacakge",
				"Package Control: List Packages"
			],
			[
				":git",
				"Set Syntax: Git Blame"
			],
			[
				":packa",
				"Package Control: Install Package"
			]
		],
		"width": 470.0
	},
	"console":
	{
		"height": 150.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/spigell/projects/my-images"
	],
	"file_history":
	[
		"/home/spigell/projects/anki-sync/internal/anki/types.go",
		"/home/spigell/projects/anki-sync/.goreleaser.yaml",
		"/home/spigell/projects/anki-sync/tests/integration/anki-sync-ci.yaml",
		"/home/spigell/projects/anki-sync/anki-sync.yaml",
		"/home/spigell/projects/anki-sync/cmd/version.go",
		"/home/spigell/projects/anki-sync/internal/anki/client.go",
		"/home/spigell/projects/anki-sync/tests/integration/testdata/decks/deck1.yaml",
		"/home/spigell/projects/anki-sync/internal/deck/deck.go",
		"/home/spigell/projects/anki-sync/internal/parser/parser.go",
		"/home/spigell/projects/anki-sync/tests/integration/testdata/decks/deck3-dup.yaml",
		"/home/spigell/projects/anki-sync/tests/integration/testdata/decks/deck2.yaml",
		"/home/spigell/projects/anki-sync/internal/model/model.go",
		"/home/spigell/projects/anki-sync/cmd/sync.go",
		"/home/spigell/projects/anki-sync/cmd/root.go",
		"/home/spigell/projects/anki-sync/tests/integration/testdata/models.yaml",
		"/home/spigell/projects/anki-sync/internal/logging/logging.go",
		"/home/spigell/go/pkg/mod/gopkg.in/yaml.v3@v3.0.1/yaml.go",
		"/home/spigell/projects/anki-sync/main.go",
		"/home/spigell/projects/anki-sync/tests/integration/testdata/notes.yaml",
		"/home/spigell/projects/anki-sync/tests/integration/testdata/decks/deck3.yaml",
		"/home/spigell/projects/anki-sync/tests/integration/models_test.go_1",
		"/home/spigell/go/pkg/mod/github.com/spf13/viper@v1.20.1/viper.go",
		"/home/spigell/projects/anki-sync/cmd/validate.go",
		"/home/spigell/projects/anki-sync/docker-compose.yaml",
		"/home/spigell/projects/anki-sync/internal/workerpool/workerpool.go",
		"/home/spigell/projects/anki-sync/internal/note/note.go",
		"/home/spigell/projects/anki-sync/tests/integration/models_test.go",
		"/home/spigell/projects/anki-sync/internal/testutil/testutil.go",
		"/home/spigell/projects/anki-sync/internal/manager.go",
		"/home/spigell/projects/anki-sync/internal/testdata/models.yaml",
		"/home/spigell/projects/anki-sync/go.mod",
		"/home/spigell/projects/anki-sync/internal/testdata/notes.yaml",
		"/home/spigell/projects/my-homelab/talos-metal/image-schematic.json",
		"/home/spigell/projects/my-homelab/talos-metal/src/talos/index.ts",
		"/home/spigell/projects/my-homelab/kubernetes/addons/victoria-metrics/vm.ts",
		"/home/spigell/projects/my-homelab/package.json",
		"/home/spigell/projects/my-homelab/talos-metal/Pulumi.main.yaml",
		"/home/spigell/projects/my-homelab/talos-metal/tsconfig.json",
		"/home/spigell/projects/my-homelab/kubernetes/addons/cloudflared/cloudflared.ts",
		"/home/spigell/projects/my-homelab/talos-metal/index.ts",
		"/home/spigell/projects/my-homelab/talos-metal/Pulumi.yaml",
		"/home/spigell/projects/my-homelab/kubernetes/addons/local-path-provisioner/provisioner.ts",
		"/home/spigell/projects/my-homelab/kubernetes/addon.ts",
		"/home/spigell/projects/my-homelab/kubernetes/addons/kubevirt/index.ts",
		"/home/spigell/projects/my-homelab/kubernetes/index.ts",
		"/home/spigell/projects/my-homelab/node_modules/@pulumi/kubernetes/yaml/yaml.d.ts",
		"/home/spigell/projects/my-homelab/node_modules/@pulumi/kubernetes/helm/v4/chart.d.ts",
		"/home/spigell/projects/my-homelab/node_modules/@pulumi/kubernetes/types/input.d.ts",
		"/home/spigell/projects/my-homelab/kubernetes/addons/victoria-metrics/index.ts",
		"/home/spigell/projects/pulumi-talos-cluster/sdk/nodejs/bin/cluster.d.ts",
		"/home/spigell/projects/pulumi-talos-cluster/sdk/nodejs/bin/types/input.d.ts",
		"/home/spigell/projects/my-homelab/talos-metal/src/talos/bootstrap.ts",
		"/home/spigell/projects/pulumi-talos-cluster/sdk/nodejs/bin/index.d.ts",
		"/home/spigell/projects/my-homelab/talos-metal/yarn.lock",
		"/home/spigell/projects/my-homelab/talos-metal/node_modules/@pulumi/kubernetes/yaml/yaml.d.ts",
		"/home/spigell/projects/my-homelab/talos-metal/src/kubernetes/kubevirt/index.ts",
		"/home/spigell/projects/my-homelab/talos-metal/src/kubernetes/index.ts",
		"/home/spigell/projects/my-homelab/talos-metal/src/kubernetes/addons/kubevirt/index.ts",
		"/home/spigell/projects/my-homelab/talos-metal/package.json",
		"/home/spigell/projects/my-homelab/talos-metal/node_modules/@pulumiverse/talos/client/getConfiguration.d.ts",
		"/home/spigell/projects/my-homelab/talos-metal/node_modules/@pulumiverse/talos/node_modules/@pulumi/pulumi/invoke.d.ts",
		"/home/spigell/projects/my-homelab/talos-metal/src/kubernetes/addon.ts",
		"/home/spigell/projects/xiu-clusters/compose/WRITEUP.md",
		"/home/spigell/projects/xiu-clusters/k8s/WRITEUP.md",
		"/home/spigell/projects/my-homelab/talos-metal/node_modules/@pulumi/kubernetes/yaml/v2/configFile.d.ts",
		"/home/spigell/projects/my-homelab/talos-metal/node_modules/@pulumiverse/talos/machine/configurationApply.d.ts",
		"/home/spigell/projects/my-cloud-resume/resume/i18n-ru.json",
		"/home/spigell/projects/my-cloud-resume/resume/src/types.ts",
		"/home/spigell/projects/my-cloud-resume/resume/src/common.ts",
		"/home/spigell/projects/my-cloud-resume/resume/src/json-resume-ru.ts",
		"/home/spigell/projects/my-cloud-resume/resume/devops-sre-hh-ru.ts",
		"/home/spigell/projects/my-cloud-resume/resume/Makefile",
		"/home/spigell/projects/my-cloud-resume/.github/workflows/all-build-site-and-pdf.yaml",
		"/home/spigell/projects/my-cloud-resume/.github/workflows/run-pulumi.yaml",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/loadbalancer/kubernetes-traefik.ts",
		"/home/spigell/projects/my-cloud-resume/resume/devops-sre-pdf-ru.ts",
		"/home/spigell/projects/my-cloud-resume/resume/src/ru.ts",
		"/home/spigell/projects/my-cloud-resume/frontend/resume.html",
		"/home/spigell/projects/my-cloud-resume/resume/src/ru.ts.",
		"/home/spigell/projects/my-cloud-resume/resume/date.ts",
		"/home/spigell/projects/my-cloud-resume/resume/src/date.ts",
		"/home/spigell/projects/my-cloud-resume/resume/resume-ru.yaml",
		"/home/spigell/projects/my-cloud-resume/resume/resume_ru.yaml",
		"/home/spigell/projects/my-cloud-resume/resume/rendercv_output/Сергей_Чух_CV.tex",
		"/home/spigell/projects/my-cloud-resume/.gitignore",
		"/home/spigell/projects/my-cloud-resume/package.json",
		"/home/spigell/projects/my-cloud-resume/frontend/additional.css",
		"/home/spigell/projects/my-cloud-resume/resume/resume.json",
		"/home/spigell/projects/my-cloud-resume/resume/rendercv_output/Сергей_Чух_CV.log",
		"/home/spigell/projects/my-cloud-resume/infra/automations.ts",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/frontend.ts",
		"/home/spigell/projects/my-cloud-resume/README.md",
		"/home/spigell/projects/my-cloud-resume/infra/Pulumi.production.yaml",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/pulumi/automation/stack.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/pulumi/automation/events.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/Pulumi.dev.yaml",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/gcs-proxy.ts",
		"/home/spigell/projects/my-cloud-resume/frontend/scripts.js",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/storage.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/storage/bucket.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/pulumi/automation/config.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/package.json",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/loadbalancer/gcp-classic.ts",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/index.ts",
		"/home/spigell/projects/my-cloud-resume/frontend/start.html",
		"/home/spigell/projects/my-cloud-resume/frontend/pdf.css",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/storage/bucketObject.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/loadbalancer.ts",
		"/home/spigell/projects/my-cloud-resume/infra/deploy.ts",
		"/home/spigell/projects/my-cloud-resume/deploy.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/firestore/database.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/firestore.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/firestore/index.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/index.d.ts",
		"/home/spigell/projects/my-cloud-resume/frontend/styles.css",
		"/home/spigell/projects/my-cloud-resume/frontend/resume-short.pdf",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/types/input.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/compute/managedSslCertificate.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/certificatemanager/certificateMapEntry.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/index.ts",
		"/home/spigell/projects/my-cloud-resume/.github/workflows/pulumi-destroy.yaml",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/compute/networkEndpointGroup.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/compute/networkEndpoint.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/cloudrun/service.d.ts",
		"/home/spigell/projects/my-cloud-resume/infra/kubernetes/crd/generated/traefik/v1alpha1/middleware.ts",
		"/home/spigell/projects/my-cloud-resume/infra/kubernetes/crd/generated/traefik/v1alpha1/index.ts",
		"/home/spigell/projects/my-cloud-resume/infra/gcp/dns.ts",
		"/home/spigell/projects/my-cloud-resume/infra/node_modules/@pulumi/gcp/dns/managedZone.d.ts"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 125.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"with",
			"fmt",
			"deck",
			"noteExist",
			"return",
			"fmt.Print",
			"Stric",
			"Str",
			"logg",
			"loggingMode",
			"With",
			"exists",
			"fmt.Print",
			"Logg",
			"Exists",
			"NoteE",
			"logg",
			"err",
			"config",
			"With",
			"result",
			"initCo",
			"Must",
			"integration",
			"dryR",
			"anki-sync",
			"anki",
			"talos",
			"config",
			"grafana",
			"home",
			"secretName",
			"config",
			"fs",
			"kube",
			"machineArg",
			"http",
			"ConfigFi",
			"ref",
			"Prof",
			"dropdo",
			"inline",
			"default",
			"aut",
			"Go,",
			"img",
			"PreEve",
			"control",
			"cfDom",
			"gcp",
			"')",
			"CF",
			"domai",
			"json",
			"event",
			"Team",
			"Iac",
			"br",
			"Devop",
			"br",
			"Gaiji",
			"<p",
			"br",
			"Gai",
			"rtk",
			"Yandex",
			"link",
			"Team",
			"hack",
			"dirt",
			"dirty",
			"support",
			"Yand",
			"dirty",
			"Yand",
			"summ",
			"passi",
			"mb",
			"Site",
			"Devops",
			"abou",
			"style",
			"gaij",
			"wit",
			"gaij",
			"150",
			"rtk",
			"Roste",
			"eng",
			"SRE",
			"Exp",
			"Skill",
			"Edu",
			"Emp",
			"skill ",
			"Exper",
			"Edu",
			"h1",
			"Exp",
			"LInk",
			"li",
			"h4",
			"Engi",
			"eng",
			"Devops",
			"Auto",
			"resume.pdf",
			"pdf",
			"resu",
			"startP",
			"resume",
			"startP",
			"startPa",
			"short",
			"Cer",
			"br",
			"Serg",
			"br",
			"html",
			"Grafa",
			"br",
			"style",
			"section.resume-section",
			"resume-se",
			"3rem",
			"padding",
			"m-0",
			"style"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"github.com/spigell/anki-sync",
			"",
			"infraunlimited_certbot_cloudflare_token",
			"openvpn_client_founded",
			"service",
			"/tmp/openvpn.key",
			"/home/spigell/openvpn.key",
			"/root/openvpn.key",
			"/opt/openvpn.key",
			"/mnt/openvpn.key"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 35.0
	},
	"input":
	{
		"height": 70.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.LSP Log Panel":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 548.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"output.mdpopups-dummy":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "my-images.sublime-project",
	"replace":
	{
		"height": 66.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"parse",
				"internal/parser/parser.go"
			],
			[
				"root",
				"cmd/root.go"
			],
			[
				"Mak",
				"resume/Makefile"
			],
			[
				"fron",
				"infra/gcp/frontend.ts"
			],
			[
				"dev.y",
				"infra/Pulumi.dev.yaml"
			],
			[
				"produ",
				"infra/Pulumi.production.yaml"
			],
			[
				"dev",
				"infra/Pulumi.dev.yaml"
			],
			[
				"sto",
				"infra/gcp/storage.ts"
			],
			[
				"au",
				"infra/automations.ts"
			],
			[
				"dev.",
				"infra/Pulumi.dev.yaml"
			],
			[
				"packa",
				"infra/package.json"
			],
			[
				"aut",
				"infra/automations.ts"
			],
			[
				"dep",
				"infra/deploy.ts"
			],
			[
				"depl",
				"deploy.ts"
			],
			[
				"Pulu",
				"infra/Pulumi.production.yaml"
			],
			[
				"dns",
				"infra/gcp/dns.ts"
			],
			[
				"opevpn",
				"group_vars/all/openvpn.yml"
			],
			[
				"vault",
				"inventories/production/group_vars/all/vault.yml"
			],
			[
				"hosts",
				"inventories/production/hosts.yaml"
			],
			[
				"o",
				"group_vars/all/openvpn.yml"
			],
			[
				"ansi",
				"ansible.cfg"
			],
			[
				"hosts.",
				"inventories/production/hosts.yaml"
			],
			[
				"ope",
				"group_vars/all/openvpn.yml"
			],
			[
				"vpn",
				"vpn.yml"
			],
			[
				"hosts.y",
				"inventories/production/hosts.yaml"
			],
			[
				"host",
				"inventories/production/hosts"
			],
			[
				"gitla",
				"group_vars/all/gitlab.yml"
			],
			[
				"op",
				"group_vars/all/openvpn.yml"
			],
			[
				"proxi",
				"group_vars/all/proxies.yml"
			],
			[
				"hos",
				"inventories/production/hosts"
			],
			[
				"node",
				"node-prepare.yml"
			],
			[
				"node-",
				"node-prepare.yml"
			],
			[
				"gw",
				"gw.yml"
			],
			[
				"mgmt.",
				"mgmt.yml"
			],
			[
				"mgmt",
				"mgmt.yml"
			],
			[
				"open",
				"group_vars/all/openvpn.yml"
			],
			[
				"openvpn/clie",
				"roles/infratech.openvpn/templates/client.conf"
			],
			[
				"openvpn/te",
				"roles/infratech.openvpn/templates/server.conf"
			],
			[
				"default.j2",
				"roles/infratech.openvpn/templates/openvpn/clients/default.j2"
			],
			[
				"req",
				"requirements.txt"
			],
			[
				"mg",
				"mgmt.yml"
			],
			[
				"gw.",
				"gw.yml"
			],
			[
				"node_e",
				"roles/monitoring/tasks/node_exporter.yml"
			],
			[
				"dns.y",
				"dns.yml"
			],
			[
				"deploy_cli",
				"roles/infratech.openvpn/tasks/deploy_clients_configs_in_server.yml"
			],
			[
				"requed",
				"roles/infratech.openvpn/tasks/deploy_required_files.yml"
			],
			[
				"doc",
				"docker-compose.yml"
			],
			[
				"doce",
				"docker-compose.yml"
			],
			[
				"core",
				"group_vars/all/coredns.yml"
			],
			[
				"vaul",
				"vault-ovpn-issue-cert.yml"
			],
			[
				"ho",
				"inventories/production/hosts"
			],
			[
				"kvm",
				"kvm.yml"
			],
			[
				"package/m",
				"roles/packages/tasks/main.yml"
			],
			[
				"packages",
				"group_vars/all/default_packages.yml"
			],
			[
				"requ",
				"requirements.yml"
			],
			[
				"vault-",
				"vault-issue-cert.yml"
			],
			[
				"status",
				"misc/vault/openvpn/roles/infraunlimited.vault/action_plugins/hashivault_status.py"
			],
			[
				"certb/mn",
				"roles/certbot/tasks/main.yml"
			],
			[
				"mgm",
				"mgmt.yml"
			],
			[
				"boots",
				"roles/infraunlimited.vault/tasks/bootstrap.yml"
			],
			[
				"proj",
				"inventories/production/group_vars/ci/gitlab/projects.yml"
			],
			[
				"gitlab",
				"group_vars/all/gitlab.yml"
			],
			[
				"grou",
				"inventories/production/group_vars/ci/gitlab/groups.yml"
			],
			[
				"projects.",
				"inventories/production/group_vars/ci/gitlab/projects.yml"
			],
			[
				"pki",
				"roles/infraunlimited.vault/tasks/pki.yml"
			],
			[
				"proje",
				"inventories/production/group_vars/ci/gitlab/projects.yml"
			],
			[
				"vars/",
				"vars/nginx/servers/chartmuseum.yml"
			],
			[
				"vag",
				"inventories/production/Vagrantfile"
			],
			[
				"etcd",
				"etcd.yml"
			],
			[
				"Va",
				"inventories/production/Vagrantfile"
			],
			[
				"V",
				"inventories/production/Vagrantfile"
			],
			[
				"group",
				"inventories/production/group_vars/ci/gitlab/groups.yml"
			],
			[
				"pro",
				"inventories/production/group_vars/ci/gitlab/projects.yml"
			],
			[
				"service-di/",
				"roles/service-discovery/defaults/main.yml"
			],
			[
				"moni",
				"inventories/production/group_vars/all/monitoring.yml"
			],
			[
				"REa",
				"README.md"
			],
			[
				"Rea",
				"README.md"
			],
			[
				"etcd/main",
				"roles/etcd/tasks/main.yml"
			],
			[
				"etcd/des",
				"roles/etcd/molecule/default/destroy.yml"
			],
			[
				"etcd/mole",
				"roles/etcd/molecule/default/molecule.yml"
			],
			[
				"etcd/molle",
				"roles/etcd/molecule/default/molecule.yml"
			],
			[
				"manage_ce",
				"roles/infratech.nginx/tasks/manage_certs.yml"
			],
			[
				"Vag",
				"inventories/production/Vagrantfile"
			],
			[
				"amtgbo.t",
				"roles/monitoring/files/amtgbot/amtgbot.template"
			],
			[
				"mon",
				"group_vars/all/monitoring.yml"
			],
			[
				"va",
				"inventories/production/Vagrantfile"
			],
			[
				"gitlab.rb",
				"roles/infratech.gitlab/templates/infra_gitlab.rb.j2"
			],
			[
				"Vagr",
				"inventories/production/Vagrantfile"
			],
			[
				"RE",
				"README.md"
			],
			[
				"manage_us",
				"roles/infratech.gitlab/tasks/manage_users.yml"
			],
			[
				"vault/check_",
				"roles/infratech.vault/tasks/check_ca.yml"
			],
			[
				"confi",
				"roles/infratech.gitlab/tasks/configure.yml"
			],
			[
				"mana",
				"roles/infratech.nginx/tasks/manage_certs.yml"
			],
			[
				"gitl/req",
				"roles/infratech.gitlab/requirements.yml"
			],
			[
				"vagr",
				"inventories/production/Vagrantfile"
			],
			[
				"clie",
				"roles/openvpn/templates/client.conf"
			],
			[
				"nginx/mana",
				"roles/nginx/tasks/manage_certs.yml"
			],
			[
				"vars",
				"misc/vault/pki/vars.yml"
			],
			[
				"server.y",
				"roles/openvpn/tasks/server.yml"
			],
			[
				"install.",
				"roles/openvpn/tasks/install.yml"
			],
			[
				"un",
				"misc/vault/unseal.yml"
			],
			[
				"boo",
				"misc/vault/bootstrap.yml"
			],
			[
				"ser",
				"servers-infra.yml"
			],
			[
				"rep",
				"group_vars/masterhosts/repos_by_users.yml"
			],
			[
				"wor",
				"workstations_work.yml"
			],
			[
				"gogs",
				"roles/gogs/templates/gogs-default.yml.j2"
			],
			[
				"gogs-ba",
				"roles/gogs/templates/gogs-backup-default.service.j2"
			],
			[
				"dant",
				"roles/dante/templates/dante-default.yml.j2"
			],
			[
				"shado",
				"roles/shadowsocks/templates/shadowsocks-default.service.j2"
			],
			[
				"sha",
				"roles/shadowsocks/templates/shadowsocks-default.yml.j2"
			],
			[
				"in",
				"servers-infra.yml"
			],
			[
				"repo",
				"group_vars/masterhosts/repos_by_users.yml"
			],
			[
				"restream-v",
				"roles/restream-VMs/tasks/main.yml"
			],
			[
				"master",
				"masterhosts.yml"
			],
			[
				"config",
				"group_vars/masterhosts/configs_by_users.yml"
			],
			[
				"add_var_log",
				"roles/duty_helper/templates/scenarios/add_var_log/sparrowfile.j2"
			],
			[
				"nginx_c",
				"roles/duty_zabbix_tg_notifier/templates/scenarios/check_nginx_caches/sparrowfile.j2"
			],
			[
				"nginx_",
				"roles/duty_zabbix_tg_notifier/templates/scenarios/check_nginx_caches/sparrowfile.j2"
			],
			[
				"app_",
				"roles/gogs/templates/app_tomato.ini.j2"
			],
			[
				"backu",
				"roles/gogs/tasks/backup.yml"
			],
			[
				"zabbix_ho",
				"roles/zabbix_hosts_importer/tasks/main.yml"
			],
			[
				"hosts_mak",
				"roles/hosts_maker/tasks/main.yml"
			],
			[
				"add_var",
				"roles/duty_helper/templates/scenarios/add_var_log/sparrowfile.j2"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 508.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"anki-de",
				"~/projects/anki-decks/anki-decks.sublime-workspace"
			],
			[
				"anki",
				"~/projects/anki-decks/anki-decks.sublime-workspace"
			],
			[
				"ide",
				"~/projects/my-identity/my-identity.sublime-project"
			],
			[
				"infra",
				"~/projects/my-infra/my-infra.sublime-project"
			],
			[
				"my-blo",
				"~/projects/my-blockchain-infra/my-blockchain-infra.sublime-project"
			],
			[
				"talos",
				"~/projects/pulumi-talos-cluster/pulumi-talos-cluster.sublime-project"
			],
			[
				"tem",
				"~/projects/tron-tem-prometheus-exporter/tem-prometheus-exporter.sublime-project"
			],
			[
				"",
				"~/projects/my-infra/my-infra.sublime-project"
			],
			[
				"inf",
				"~/projects/my-infra/my-infra.sublime-project"
			],
			[
				"trade",
				"~/projects/fuel-mira-ftp-trader/fuel-mira-fpt-trade-bot.sublime-project"
			],
			[
				"blo",
				"~/projects/my-blockchain-infra/my-blockchain-infra.sublime-project"
			],
			[
				"infr",
				"~/projects/my-blockchain-infra/my-blockchain-infra.sublime-project"
			],
			[
				"tal",
				"~/projects/pulumi-talos-cluster/pulumi-talos-cluster.sublime-project"
			],
			[
				"ta",
				"~/projects/tron-account-watcher/tron-account-watcher.sublime-project"
			],
			[
				"githu",
				"~/projects/github/github.sublime-project"
			],
			[
				"vault",
				"~/projects/infra/infraUnlimited/ansible-roles/ansible-role-vault/ansible-role-vault.sublime-project"
			],
			[
				"pro",
				"~/projects/infra/infraUnlimited/infra-proposals/proposals.sublime-project"
			],
			[
				"pr",
				"~/projects/infra/infraUnlimited/infra-proposals/proposals.sublime-project"
			],
			[
				"glu",
				"~/projects/infra/infraUnlimited/ansible-roles/ansible-role-gopher-lua-libs/ansible-role-gopher-lua-libs.sublime-project"
			],
			[
				"host",
				"~/projects/infra/infraUnlimited/ansible-roles/ansible-role-hosts/ansible-role-hosts.sublime-project"
			],
			[
				"bot",
				"~/projects/pokerchained-bot/lua_pockerchained_bot.sublime-project"
			],
			[
				"coff",
				"~/coffeenet/ansible/.coffenet.sublime-project"
			],
			[
				"co",
				"~/coffeenet/ansible/.coffenet.sublime-project"
			]
		],
		"width": 386.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"lsp_show_inlay_hints": false
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 390.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
